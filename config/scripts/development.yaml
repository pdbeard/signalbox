# Development Workflow Example Scripts
#
# ⚠️  IMPORTANT: These are EXAMPLE scripts for learning and getting started.
# These scripts are NOT meant for production use - they are educational tools!
#
#
# NOTE: All commands use 'echo' and 'sleep' for demonstration purposes.
# In real usage, replace these with actual build tools, test runners, 
# deployment scripts, etc. (e.g., pytest, npm test, docker build, kubectl apply)

scripts:
- name: run_tests
  description: Run project tests
  command: echo "Running tests..." && sleep 2 && echo "Unit tests - 25/25 passed"
    && echo "Integration tests - 8/8 passed" && echo "All tests passed successfully"
  log_limit:
    type: count
    value: 5
- name: lint_code
  description: Check code quality and style
  command: echo "Linting code..." && sleep 1 && echo "Python files - No issues found"
    && echo "YAML files - No issues found" && echo "Code quality checks passed"
  log_limit:
    type: count
    value: 5
- name: security_scan
  description: Run security vulnerability scan
  command: echo "Running security scan..." && sleep 2 && echo "No high-severity vulnerabilities
    found" && echo "Dependencies up to date" && echo "Security scan completed"
  log_limit:
    type: count
    value: 5
- name: build_project
  description: Build the project
  command: echo "Building project..." && sleep 3 && echo "Dependencies resolved" &&
    echo "Compilation successful" && echo "Build artifacts created" && echo "Build
    completed successfully"
  log_limit:
    type: count
    value: 5
- name: run_performance_tests
  description: Execute performance benchmarks
  command: echo "Running performance tests..." && sleep 3 && echo "API response time
    - 85ms (target <100ms)" && echo "Memory usage - 45MB (target <50MB)" && echo "Performance
    benchmarks passed"
  log_limit:
    type: count
    value: 5
- name: generate_documentation
  description: Generate project documentation
  command: echo "Generating documentation..." && sleep 2 && echo "API docs generated"
    && echo "User guide updated" && echo "Documentation build completed"
  log_limit:
    type: count
    value: 5
- name: deploy_staging
  description: Deploy to staging environment
  command: echo "Deploying to staging..." && sleep 2 && echo "Files uploaded" && echo
    "Services restarted" && echo "Health checks passed" && echo "Deployed to staging
    successfully"
  log_limit:
    type: count
    value: 5
- name: deploy_production
  description: Deploy to production environment
  command: echo "Deploying to production..." && sleep 3 && echo "Blue-green deployment
    initiated" && echo "Traffic switched" && echo "Health checks passed" && echo "Production
    deployment completed"
  log_limit:
    type: count
    value: 5
